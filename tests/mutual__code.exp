From zoo Require Import
  prelude.
From zoo.language Require Import
  typeclasses
  notations.
From tests Require Import
  mutual__types.
From zoo Require Import
  options.

#[local] Definition __zoo_recs_0 := (
  recs: "test3" "x" =>
    "x"
  and: "test4" "x" =>
    "x"
)%zoo_recs.
Definition mutual_test3 :=
  ValRecs 0 __zoo_recs_0.
Definition mutual_test4 :=
  ValRecs 1 __zoo_recs_0.
#[global] Instance :
  AsValRecs' mutual_test3 0 __zoo_recs_0 [
    mutual_test3 ;
    mutual_test4
  ].
Proof.
  done.
Qed.
#[global] Instance :
  AsValRecs' mutual_test4 1 __zoo_recs_0 [
    mutual_test3 ;
    mutual_test4
  ].
Proof.
  done.
Qed.

#[local] Definition __zoo_recs_1 := (
  recs: "test5" "x" =>
    "test6" "x"
  and: "test6" "x" =>
    "test5" "x"
)%zoo_recs.
Definition mutual_test5 :=
  ValRecs 0 __zoo_recs_1.
Definition mutual_test6 :=
  ValRecs 1 __zoo_recs_1.
#[global] Instance :
  AsValRecs' mutual_test5 0 __zoo_recs_1 [
    mutual_test5 ;
    mutual_test6
  ].
Proof.
  done.
Qed.
#[global] Instance :
  AsValRecs' mutual_test6 1 __zoo_recs_1 [
    mutual_test5 ;
    mutual_test6
  ].
Proof.
  done.
Qed.
