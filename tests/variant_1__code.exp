From zoo Require Import
  prelude.
From zoo.language Require Import
  typeclasses
  notations.
From tests Require Import
  variant_1__types.
From zoo Require Import
  options.

Definition variant_1_test1 : val :=
  fun: <> =>
    §A ;;
    ‘B( #0 ) ;;
    ‘C( #0, #0 ) ;;
    ().

Definition variant_1_test2 : val :=
  fun: "t" =>
    match: "t" with
    | A =>
        #0
    | B "i" =>
        "i"
    | C "i1" "i2" =>
        "i1" + "i2"
    end.

Definition variant_1_test3 : val :=
  fun: "t" =>
    match: "t" with
    | A =>
        ()
    | B <> =>
        ()
    | C <> <> =>
        ()
    end.

Definition variant_1_test4 : val :=
  fun: "t" =>
    match: "t" with
    | A =>
        §A
    | B <> as "t" =>
        "t"
    | C <> <> as "t" =>
        "t"
    end.

Definition variant_1_test5 : val :=
  fun: "t" =>
    match: "t" with
    | A =>
        ()
    |_ =>
        ()
    end.

Definition variant_1_test6 : val :=
  fun: "t" =>
    match: "t" with
    |_ as "t" =>
        "t"
    end.

Definition variant_1_test7 : val :=
  fun: "t" =>
    match: "t" with
    |_ as "t" =>
        let: "t'" := "t" in
        "t" ;;
        "t'"
    end.

Definition variant_1_test8 : val :=
  fun: "t" =>
    match: "t" with
    | A =>
        ()
    | B <> =>
        ()
    | C <> <> =>
        ()
    end.
